version: 2
jobs:
  test:
    working_directory: ~/code
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - run: npm install
      - run: npm run eslint
      - run: npm run stylelint
      - run: npm run build
      - run: npm run build-storybook
      - run: npm run test:server -- --maxWorkers 4 --coverage
      - run: npx codecov && rm -rf codecov
      - run: npm run test:jsdom -- --maxWorkers 2 --coverage
      - run: npx codecov && rm -rf codecov
      - run:
          name: serve
          command: node bin/serve.js
          background: true
      # TODO: actually poll for the server to start
      - run: sleep 3
      - run: npm run monitors
      - run: npm run automation

  monitor-production:
    working_directory: ~/code
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - run: npm install # TODO: make this fast
      - run: CI_REFERENCE_APP_DOMAIN=https://production.herokuapp.com npm run monitors

  monitor-staging:
    working_directory: ~/code
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - run: npm install # TODO: make this fast
      - run: CI_REFERENCE_APP_DOMAIN=https://staging.herokuapp.com npm run monitors

  publish-storybook:
    working_directory: ~/code
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - run: npm install
      - run: npm run build-storybook
      - run: cp -R .circleci storybook-static/
      - run: npx storybook-to-ghpages --existing-output-dir=storybook-static

workflows:
  version: 2
  commit:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - gh-pages
      - publish-storybook:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - monitor-production:
          filters:
            branches:
              ignore:
                - gh-pages
      - monitor-staging:
          filters:
            branches:
              ignore:
                - gh-pages
  monitor:
    triggers:
      - schedule:
          # TODO: when actually in production, run in every minute
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - monitor-production
      - monitor-staging
